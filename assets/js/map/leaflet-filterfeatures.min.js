/*
* Leaflet Filter Features version 1.0.0
*
* Copyright 2022 Cecilia Palmer 
* mail@ceciliapalmer.studio
* https://ceciliapalmer.studio
*
* This program is free software: you can redistribute it and/or modify it under the terms 
* of the GNU General Public License as published by the Free Software Foundation, version 3 or later.
* This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
* without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
* See the GNU General Public License for more details.

* You should have received a copy of the GNU General Public License along with this program. If not, see https://www.gnu.org/licenses/.
*
*/
let filters={service:{de:[],en:[]},district:{de:[],en:[]}},filterStates={district:0,service:0};function filterByValue(t,e){return t.properties.hasOwnProperty(e)&&filterStates.service.includes(t.properties[e])}const highlight={fillColor:"#ff007f",zIndexOffset:999};L.Control.FilterFeatures=L.Control.extend({includes:L.Evented.prototype,options:{position:"topleft",layer:!1,lang:"en",collapsed:!0,filterData:filters,clusterLayer:!1},initialize:function(t){L.Util.setOptions(this,t),this._container=null,this._list=null,this._reset=null,this._layer=this.options.layer||new L.LayerGroup},onAdd:function(t){this._map=t,this._layer.options.filter=this.filterFunction,filterStates.district=filters.district.en,"de"==this.options.lang?filterStates.service=filters.service.de:filterStates.service=filters.service.en,this._filterStates=filterStates;const e=this._container=L.DomUtil.create("div","leaflet-control-filter-feature");L.DomEvent.on(e,"mousewheel",L.DomEvent.stopPropagation);const i=L.DomUtil.create("div","filter__toggler",e),s=L.DomUtil.create("div","activeFilters",e);this._active=s;const r=this._list=this._container=L.DomUtil.create("div","filter__list",e);for(category in this.options.filterData){const t=L.DomUtil.create("div",`toggle toggle-${category}`,i);t.innerHTML=labels[category][this.options.lang],L.DomUtil.create("span","count",t);const e=L.DomUtil.create("div",`checkbox-group ${category}-group`,r);this.options.filterData[category][this.options.lang].forEach((t=>{e.appendChild(this._createCheckbox(t,category))})),L.DomEvent.on(t,"click",(i=>{!0!==i._simulated&&(this._container.classList.contains("active")?t.classList.contains("open")?(t.classList.toggle("open"),e.classList.toggle("open"),this._container.classList.toggle("active")):(document.querySelector(".checkbox-group.open").classList.toggle("open"),document.querySelector(".toggle.open").classList.toggle("open"),t.classList.toggle("open"),e.classList.toggle("open")):(t.classList.toggle("open"),e.classList.toggle("open"),this._container.classList.toggle("active")))}))}const l=L.DomUtil.create("div","filter__buttons",r),o=this._reset=L.DomUtil.create("button","reset__filters filter__btn disabled",l);o.innerHTML=labels.reset[this.options.lang];const a=L.DomUtil.create("button","apply__filters filter__btn",l);return a.innerHTML=labels.submit[this.options.lang],L.DomEvent.on(a,"click",this._updateFilters,this),L.DomEvent.on(o,"click",this.resetFilters,this),e},_initToggle(){},expand:function(t){return t="boolean"!=typeof t||t,L.DomUtil.addClass(this._container,"filter-open"),!1!==t&&this._map.on("dragstart click",this.collapse,this),this.fire("filter:expanded"),this},collapse:function(){return this._alert.style.display="none",this.options.collapsed&&(L.DomUtil.removeClass(this._container,"filter-open"),this._map.off("dragstart click",this.collapse,this)),this.fire("filter:collapsed"),this},onRemove:function(t){},_createCheckbox:function(t,e){const i=L.DomUtil.create("div","form-field checkbox-field"),s=L.DomUtil.create("input","filter",i);s.classList.add(e),s.id=t,s.setAttribute("type","checkbox"),s.setAttribute("name",t),s.setAttribute("value",t),L.DomUtil.create("span","cb",i);const r=L.DomUtil.create("label","field-label",i);return r.htmlFor=t,r.innerHTML=t,i},_updateFilters:function(){this._layer.clearLayers(),this.options.clusterLayer.clearLayers(),filterStates.service=[],filterStates.district=[];for(let t of document.querySelectorAll("input.filter"))if(t.checked)switch(t.className){case"filter service":filterStates.service.push(t.value);break;case"filter district":filterStates.district.push(t.value)}this._layer.addData(this._layer._data),this.options.clusterLayer.addLayer(this._layer),document.querySelectorAll(".checkbox-group.open,.toggle.open").forEach((t=>{t.classList.toggle("open")})),this._container.classList.toggle("active"),0!==Object.keys(this._layer._layers).length&&this._map.fitBounds(this._layer.getBounds()),this.listFilters(),this.fire("filter:apply")},filterFunction:t=>{const e=t.properties.hasOwnProperty("latitude"),i=filterByValue(t,service1)||filterByValue(t,service2)||filterByValue(t,service3)||0==filterStates.service.length,s=filterStates.district.includes(t.properties.bezirk)||0==filterStates.district.length;return i&&s&&e},listFilters:function(t){if(this._active.innerHTML="",this._container.classList.contains("filter-active")&&this._container.classList.remove("filter-active"),0==t){document.querySelector(".toggle-service .count").innerHTML="",document.querySelector(".toggle-district .count").innerHTML="";for(let t of document.querySelectorAll("input.filter"))t.checked=!1}else{filterStates.service.concat(filterStates.district).forEach((t=>{L.DomUtil.create("span","",this._active).innerHTML=t})),document.querySelector(".toggle-service .count").innerHTML=filterStates.service.length>0?` (${filterStates.service.length})`:"",document.querySelector(".toggle-district .count").innerHTML=filterStates.district.length>0?` (${filterStates.district.length})`:"",this._container.classList.contains("filter-active")||this._container.classList.add("filter-active")}},resetFilters:function(){this._layer.clearLayers(),this.options.clusterLayer.clearLayers(),filterStates.service=this._layer._filters.service[this.options.lang],filterStates.district=this._layer._filters.district[this.options.lang],this._layer.addData(this._layer._data),this.options.clusterLayer.addLayer(this._layer),document.querySelectorAll(".checkbox-group.open,.toggle.open").forEach((t=>{t.classList.toggle("open")})),this._container.classList.toggle("active"),0!==Object.keys(this._layer._layers).length&&this._map.fitBounds(this._layer.getBounds()),this.listFilters(0),this.fire("filter:reset")}}),L.control.filterfeatures=t=>new L.Control.FilterFeatures(t);